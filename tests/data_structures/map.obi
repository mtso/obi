class Map {
    init() {
        this.items = Object();
        this.defined = Object();
    }
    get(key) {
        return match (this.defined.(key)) {
            true -> this.items.(key);
            _ -> nil;
        };
    }
    set(key, value) {
        this.items.(key) = value;
        this.defined.(key) = true;
    }
    has(key) {
        return match (this.defined.(key)) {
            true -> true;
            _ -> false;
        };
    }
    unset(key) {
        this.items.(key) = nil;
        this.defined.(key) = false;
    }
    keys() {
        result := Object();
        itemKeys := keys(this.items);
        resultLen := 0;
        i := 0; while() { i < itemKeys.len; } {
            match (this.defined.(itemKeys.(i))) {
                true -> {
                    result.(resultLen) = itemKeys.(i);
                    resultLen = resultLen + 1;
                }
                _ -> ();
            };
            i = i + 1;
        };
        result.("len") = resultLen;
        return result;
    }
}

m := Map();
m.set("foo", "bar");
m.set("bar", "baz");
print(m.has("foo")); // expect: "true"
print(m.get("foo")); // expect: "bar"

{
    k := m.keys();
    i := 0; while() { i < k.len; } {
        print(strlen(k.(i))); // Order is not guaranteed.
        i = i + 1;
    };
    // expect: "3"
    // expect: "3"
}
