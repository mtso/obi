fun Queue() {
    self := [
        items = [],
        head = 0,
        tail = 0,
        empty = fun() {
            return self.size() <= 0;
        },
        size = fun() {
            return self.tail - self.head;
        },
        add = fun(item) {
            self.items.(self.tail) = item;
            self.tail = self.tail + 1;
        },
        poll = fun() {
            match (self.empty()) {
                true -> return nil;
                _ -> ();
            };
            item := self.items.(self.head);
            self.head = self.head + 1;
            return item;
        },
        peek = fun() {
            match (self.empty()) {
                true -> return nil;
                _ -> ();
            };
            return self.items.(self.head);
        },
    ];
    return self;
}

q := Queue();
q.add(1);
q.add(2);
print(q.size()); // expect: "2"
print(q.poll()); // expect: "1"
print(q.peek()); // expect: "2"
print(q.poll()); // expect: "2"
print(q.poll()); // expect: "nil"
